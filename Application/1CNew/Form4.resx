<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwYAFWoMAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD/AQBVqhUKR3tPCjpqagdAeEQAQ4UXAAB/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVuw8OUZRYDDpmvAsw
        VtkLOWS4C0N2cgBEiC0AHHEJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwQLS4dECz1ttDp3r/Jkmcn6EEV28govU9QKPGqeBkF6VgA+
        jR0AM5kFAAAAAAAAAAAAAAABAAAABAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAJEkcBzBXiR9akOuj1P3+x+r+/0qq/f8da6z7CjJV7Ao3YcMKQnR/CEiEPAAxYRUAAAAOAAAAGQAA
        ACgAAAAlAAAADwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAMNTgosSMZ9yPr9w/v+/779
        /f+u+f3/fd79/0es5f0XVYf1CC1N3gw4ZLAHMFh0AA0eTQAAAFYAAABnAAAAXAAAADEAAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAOwAAAJ4tO0L1kdzd/5z7+/+T8PD/m9HR/3jU2P9x2fb/ZM39/zmL
        u/sLNFrxBiI+zxcoN5hiZGWhq6mpxbm4uMYICAhbAAAAJAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAKwAA
        AIwKCgr3Wlxc/2BmZv9dm5z/j8fH//Pz8v/e4N7/f56u/0qW3f9RpPn/PZTh/oOguvjt7u/05+Le+6+d
        jf/OxLv+q6urtgAAAEoAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIgAAAHcJCQnjP0BA/1BQUP9TU1P/hYWF/+3r
        6f+um4v/pZB+/8a7s/+2v8f/tsnk//P2+P/+/v7//v7+//n49/+3ppj/o4x7/9DIwvNSUlKDAAAAOAAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFwAAAGQAAADcKisr/0FBQf9GRkb/Y2Nj//b29v/5+fn/4ODc/8O9t//9/f3//v7+//7+
        /v/+/v7//v7+//7+/v/+/v7/9/b1/6mVhP+tmor/3NrX7BAQEGEAAAAnAAAABwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAFQFBQW/MTIy/Tk5
        Of89PT3/a2tr/97e3v/r6+v/8PDw//n5+f/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//39
        /f/d1c//o417/7urnv+wr6+5AwMDTgAAABwAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAEMDAwOwLy8v/jExMf80NDT/S0tL/8HBwf/39/f/+/v7//39
        /f/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+/8i8sf+jjXv/zcG5+U5O
        TowAAABAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        ADcCAgKYNTU19jAwMP9BQUH/XV1d/3h4eP+jo6P/0dHR/+3t7f/5+fn//Pz8//7+/v/+/v7//v7+//7+
        /v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/5+Pf/s6GS/6iUg//j4N/zMDAwegAAADMAAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACgAAACFHBwc7zQ0NP8aGhr/FRUV/zk5
        Of9CQkL/VFRU/3R0dP+pqan/0dHR/+3t7f/4+Pj/9vb2//39/f/+/v7//v7+//7+/v/+/v7//v7+//7+
        /v/+/v7//v7+/+/s6f+plYX/rpuM/6+tq9EAAABuAAAALgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACAAAABxEBAQ4Tk5Of8WFhb/EhIS/zU1Nf87Ozv/Ojo6/zs7O/9AQED/TExM/3Bw
        cP+qqqr/1dXV/8jIyP/6+vr//f39//7+/v/+/v7//v7+//7+/v/9/f3/+/v7//v7+//r6+v/29PM/6ON
        e//Iu7H9Y2NjvwAAAHEAAAAzAAAADgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABUAAABiBAQE1SAg
        IP4TExP/CwsL/y8vL/89PT3/ODg4/zs7O/86Ojr/PDw8/zw8PP9AQED/R0dH/2pqav+enp7/1dXV//Dw
        8P/5+fn//Pz8//v7+//q6ur/6urq/9zc3P/Y2Nj/19fX/+rq6v/Et6z/pI99/9bOyfk/Pz+6AAAAegAA
        AEEAAAAdAAAACQAAAAIAAAAAAAAAAAAAAAsAAABHAQEBvRgYGP8QEBD/Dg4O/19fX/+UlJT/kJCQ/1FR
        Uf87Ozv/Ozs7/zg4OP87Ozv/Ozs7/zg4OP8/Pz//VlZW/4ODg/+2trb/29vb/+Dg4P/Pz8//1dXV/9LS
        0v/V1dX/3t7e//Dw8P/5+fn/+Pj4/7OjlP+plIT/8e/t/5KSktMTExOHAAAAVAAAAC8AAAATAAAAAwAA
        AAAAAAAZAAAAhgwMDPcODg7/KSkp/4GBgf+cnJz/lZWV/4uLi/+FhYX/dHR0/2tra/9CQkL/Nzc3/zs7
        O/82Njb/Nzc3/zk5Of9BQUH/U1NT/3Z2dv+NjY3/lJSU/5SUlP+dnZ3/rKys/8LCwv/Y2Nj/1dXV/93d
        3f/l4d3/pY99/72toP/l39v+xr+67ZqamrYAAABjAAAANgAAABAAAAABAAAAOQ4ODusQEBD/Ozs7/4+P
        j/+ZmZj/l5eX/5KSkv+Kior/gICA/3Z2dv9vb2//mpqa/2lpaf8+Pj7/Ozs7/zc3N/8xMTH/MzMz/zQ0
        NP87Ozv/RERE/01NTf9GRkb/RkZG/0xMTP9sbGz/nJyc/8jIyP/w8PD/+fn5/9/Y0v+lkH7/zMC2/7Gf
        j/+8rJ//4t7b95KSkmkeHh4RAAAAARgYGGoSEhLzSkpK/35+fv+CgoL/iIiI/4qKiv+IiIj/goKC/3p6
        ev9xcXH/aWhp/2JiYv9vb2//c3Nz/0hISP8xMTH/Nzc3/zY2Nv82Njb/NTU1/zQ0NP81NTX/NDQ0/zQ0
        NP84ODj/QkJC/1hYWP+BgYH/s7Oz/93d3f/z8vL/wLKm/6eTgv/g2tP/ppCA/6WPff/t6ef1x8fHKQAA
        AAAYGBg2Pj4+1lVVVf9eXl7/ZWVl/2tra/9ubm7/bm5u/2tra/9mZmb/Xl5e/1dXV/9RUVH/TU1N/0tM
        S/9RUVD/Wlpa/0BAQP8zMzP/MzMz/zMzM/80NDT/NTU1/zk5Of87Ozv/PDw8/zw8PP88PDz/RUVF/1xc
        XP+Hh4f/tbW1/+Hg3/+xn5H/s6GS/+zo5P3d3NzGurq6OwAAAAAAAAAAMzMzBS4uLgsvLy9sMTEx/DAw
        MP80NDT/PDw8/0NDQ/9HR0f/R0dH/0NDQ/9AQED/Ozs7/zk5Of84ODj/ODg4/zk5Of8+Pj7/UlJR/yws
        LP8zMjP/OTk5/zs7O/88PDz/PDw8/zw8PP88PDz/PDw8/zw8PP89PT3/SEhI/3l5ef/MzMz/5+Pg/6iT
        gv/Etqv8jIyMUgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAACoqKgYuLi5eLS0trywsLPovLy//MDAw/zEx
        Mf8uLi7/Kysr/ycnJ/8kJCT/IyMj/yMjI/8lJSX/Kioq/y4uLv85OTn/Ojo6/zY2Nv8fHx//IiIi/yUm
        Jf8wMDD/ODg4/zw8PP88PDz/S0tL/46Ojv/d3d3/+fn5//z8/P/Z0Mn/yb6z+O7u7qWZmZkFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkcCwsLuQUFBfEMDAz+FBQU/xYWFv8VFRX/FRUV/xQU
        FP8UFBT/FRUV/xYWFv8YGBj/Gxsa/xwcHP8eHh7/ICAg/yMkI/8pKSj/bGxr/x8fH/8vLy//W1tb/7i4
        uP/x8fH//Pz8/vz8/PP7+/vh5ubmcdjY2A0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEHBwckAgICbQMDA+sAAAD/AAAA/wEBAf8DAwP/BAQE/wUFBf8KCgr/CgoK/wwM
        DP8MDQz/Dg4O/w4ODv8QEBD/ERER/xISEv8UFRT/EhIR/zY2Nv+hoaH/7+/vxvr6+l/n5+crzMzMBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADCAgIYwAAAM0AAAD4AAAA/wAAAP8AAAD/AQEB/wEBAf8CAgL/AwMD/wQEBP8FBQX/BgYG/wYG
        Bv8HBwf/BwcH/wcHB/8JCQn/DAwM/wsLC7oAAAAvAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBQUFMwUF
        BZ0BAQH9AgIC/wMDA/8EBAT/BAQE/wQEBP8CAgL/AgIC/wEBAf8BAQH/AQEB/wAAAP8AAAD/AQEB/wEB
        Af8EBAT+CAgI9AsLC7YAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHQcHB40ICAjSCQkJ/QsL
        C/8KCgr/CAgI/wcHB/8EBAT/AgIC/wEBAf8AAAD/AAAA/wAAAP8AAAD/AAAA8wEBAdQUFBSyIiIiQwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABREREU0RERHvEBAQ/w8PD/8ODg7/CgoK/wcH
        B/8DAwP/AwMD9QUFBb4DAwNjAAAAKAAAAA8AAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACRAQEE4SEhKNERERhREREWgQEBA+CgoKGgAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAAD/+P///wAAAP/g
        P///AAAA/+Af//8AAAD/wAY//wAAAP/AAA//AAAA/4AAD/8AAAD/AAAH/wAAAP4AAAf/AAAA/AAAA/8A
        AAD8AAAB/wAAAPgAAAD/AAAA8AAAAH8AAADgAAAAfwAAAMAAAAA/AAAAwAAAAA8AAAAAAAAAAwAAAAAA
        AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAOAAAAADAAAA/AAAAA8A
        AAD+AAAAPwAAAP/AAAB/AAAA//AAAD8AAAD//AAAPwAAAP//gAB/AAAA///gH/8AAAD//////wAAAP//
        ////AAAA//////8AAAD//////wAAAP//////AAAA//////8AAAD//////wAAAP//////AAAA//////8A
        AAA=
</value>
  </data>
</root>